syntax = "proto3";

package replica_replica;

import "common.proto";

service ReplicaReplicaGrpc {
    rpc PrePrepare (PrePrepareReq) returns (common.Empty) {}
    rpc Prepare (common.SignedMessage) returns (common.Empty) {}
    rpc Commit (common.SignedMessage) returns (common.Empty) {}
    rpc RelayRequest (common.SignedMessage) returns (common.Empty) {}
    rpc Recover (RecoverReq) returns (stream RecoverReply) {}
}

message PrePrepareReq {
    common.SignedMessage preprepare = 1;
    common.SignedMessage client_message = 2;
}

message RecoverReq {
    int64 last_n = 1;
}

message RecoverReply {
    repeated common.SignedMessage signed_commits = 1; // signed CommitCmd
}


// GRPC unrelated messages

message PrePrepareCmd {
    int32 v = 1;
    int64 n = 2;
    bytes d = 3;
}

message PrepareCmd {
    int32 v = 1;
    int64 n = 2;
    bytes d = 3;
    int32 i = 4;
}

message CommitCmd {
    int32 v = 1;
    int64 n = 2;
    bytes d = 3;
    int32 i = 4;
}
